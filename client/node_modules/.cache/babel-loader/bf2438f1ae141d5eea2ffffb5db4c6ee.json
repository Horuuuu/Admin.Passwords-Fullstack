{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Mami\\\\Desktop\\\\Admin.Password\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport Axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [password, setPassword] = useState(''); //estado de la contraseña\n\n  const [title, setTitle] = useState(''); //estado del titulo del sitio\n\n  const [passwordList, setPasswordList] = useState([]); //estado para mostrar la lista de  contraseñas y sitios\n  //useffect mustra inmediatamente el resultado de la peticion al cargarse el sitio o refrescarse\n\n  useEffect(() => {\n    Axios.get('http://localhost:3001/showpasswords').then(response => {\n      setPasswordList(response.data);\n    });\n  }, []); //hace peticion de la ruta addpassword\n\n  const addPassword = () => {\n    Axios.post(\"http://localhost:3001/addpassword\", {\n      password: password,\n      //este es el body\n      title: title\n    });\n  }; //peticion al backend para desencriptar la contraseña \n\n\n  const decryptPassword = encryption => {\n    Axios.post(\"http://localhost:3001/decryptpassword\", {\n      password: encryption.password,\n      iv: encryption.iv\n    }).then(response => {\n      setPasswordList(passwordList.map(value => {\n        //para mostrar la contraseña en lugar del titulo\n        return value.id == encryption.id //si cada elemrnto el id es igual al encriptado devuelve\n        ? {\n          id: value.id,\n          password: value.password,\n          //contraseña\n          title: response.data,\n          //response.data es la version desencriptada\n          iv: value.iv\n        } : value; //sino devuelve el valor\n      }));\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../img/key.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Administrador de contrase\\xF1as \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 38\n    }, this), \" \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: \"../img/lock.png\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 77\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"AddingPassword\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"...Contrase\\xF1a\",\n        onChange: event => setPassword(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"...Sitio Web\",\n        onChange: event => setTitle(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addPassword,\n        children: \"Agregar Contrase\\xF1a\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"passwords\",\n      children: passwordList.map((value, key) => {\n        //\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"password\",\n          onClick: () => {\n            decryptPassword({\n              password: value.password,\n              iv: value.iv,\n              id: value.id\n            });\n          },\n          children: /*#__PURE__*/_jsxDEV(\"h4\", {\n            children: value.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this)\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 18\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"lFM8Qq04WHAnzLftuZaQ+VS0kyI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Mami/Desktop/Admin.Password/client/src/App.js"],"names":["useState","useEffect","Axios","App","password","setPassword","title","setTitle","passwordList","setPasswordList","get","then","response","data","addPassword","post","decryptPassword","encryption","iv","map","value","id","event","target","key"],"mappings":"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","sourcesContent":["\nimport './App.css';\nimport {useState,useEffect}from 'react';\nimport Axios from 'axios';\n\nfunction App() {\n  const [password,setPassword]=useState('');//estado de la contraseña\n  const [title,setTitle]=useState('');//estado del titulo del sitio\n  const [passwordList,setPasswordList]=useState([]);//estado para mostrar la lista de  contraseñas y sitios\n\n\n//useffect mustra inmediatamente el resultado de la peticion al cargarse el sitio o refrescarse\nuseEffect(()=>{\nAxios.get('http://localhost:3001/showpasswords').then((response)=>{\n  setPasswordList(response.data)\n})\n},[])\n//hace peticion de la ruta addpassword\n  const addPassword = () => {\n    Axios.post(\"http://localhost:3001/addpassword\", {\n      password: password,//este es el body\n      title: title,\n    });\n  };\n  //peticion al backend para desencriptar la contraseña \nconst decryptPassword=(encryption)=>{\nAxios.post(\"http://localhost:3001/decryptpassword\",{\n  password:encryption.password,\n  iv:encryption.iv\n}).then((response)=>{\n  setPasswordList(passwordList.map((value)=>{//para mostrar la contraseña en lugar del titulo\n    return  value.id == encryption.id//si cada elemrnto el id es igual al encriptado devuelve\n    ? {\n        id: value.id,\n        password: value.password,//contraseña\n        title: response.data,//response.data es la version desencriptada\n        iv: value.iv,\n      }\n    : value;//sino devuelve el valor\n})\n);\n  })\n}\n\n  return (\n    <div className=\"App\">\n      <img src=\"../img/key.png\"   /> <h1>Administrador de contraseñas </h1> <img src=\"../img/lock.png\"   />\n      <div className=\"AddingPassword\">\n        <input type=\"text\" placeholder=\"...Contraseña\" \n        onChange={(event=>setPassword(event.target.value))}/>\n\n        <input type=\"text\" placeholder=\"...Sitio Web\" \n        onChange={(event=>setTitle(event.target.value))}\n        />\n\n        <button onClick={addPassword}>Agregar Contraseña</button>\n\n      </div>\n      <div className=\"passwords\">\n        {passwordList.map((value,key)=>{//\n          return <div className=\"password\" onClick={() => {\n            decryptPassword({\n              password: value.password,\n              iv: value.iv,\n              id: value.id,\n            });\n          }}\n          key={key} >\n            <h4>{value.title}</h4></div>\n\n        })}\n\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}